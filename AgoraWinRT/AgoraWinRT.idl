import "AgoraWinRTTypes.idl";
import "AgoraWinRTEnums.idl";

namespace AgoraWinRT
{
	interface AgoraRtcEventHandler
	{
		//频道事件
		void OnConnectionStateChanged(AgoraWinRT.CONNECTION_STATE_TYPE type, AgoraWinRT.CONNECTION_CHANGED_REASON_TYPE reason);
		void OnJoinChannelSuccess(String channel, UInt64 uid, UInt32 elapsed);
		void OnRejoinChannelSuccess(String channel, UInt64 uid, UInt32 elapsed);
		void OnLeaveChannel(AgoraWinRT.RtcStats stats);
		void OnClientRoleChanged(AgoraWinRT.CLIENT_ROLE_TYPE oldRole, AgoraWinRT.CLIENT_ROLE_TYPE newRole);
		void OnUserJoined(UInt64 uid, UInt32 elapsed);
		void OnUserOffline(UInt64 uid, AgoraWinRT.USER_OFFLINE_REASON_TYPE reason);
		void OnNetworkTypeChanged(AgoraWinRT.NETWORK_TYPE type);
		void OnConnectionLost();
		void OnTokenPrivilegeWillExpire(String token);
		void OnRequestToken();
		//本地媒体事件
		void OnLocalAudioStateChanged(AgoraWinRT.LOCAL_AUDIO_STREAM_STATE state, AgoraWinRT.LOCAL_AUDIO_STREAM_ERROR error);
		void OnLocalVideoStateChanged(AgoraWinRT.LOCAL_VIDEO_STREAM_STATE state, AgoraWinRT.LOCAL_VIDEO_STREAM_ERROR error);
		void OnFirstLocalAudioFramePublished(UInt32 elapsed);
		void OnFirstLocalVideoFramePublished(UInt32 elapsed);
		void OnAudioPublishStateChanged(String channel, AgoraWinRT.STREAM_PUBLISH_STATE oldState, AgoraWinRT.STREAM_PUBLISH_STATE newState, UInt32 elapsed);
		void OnVideoPublishStateChanged(String channel, AgoraWinRT.STREAM_PUBLISH_STATE oldState, AgoraWinRT.STREAM_PUBLISH_STATE newState, UInt32 elapsed);
		//远端媒体事件
		void OnRemoteAudioStateChanged(UInt64 uid, AgoraWinRT.REMOTE_AUDIO_STATE state, AgoraWinRT.REMOTE_AUDIO_STATE_REASON reason, UInt32 elapsed);
		void OnRemoteVideoStateChanged(UInt64 uid, AgoraWinRT.REMOTE_VIDEO_STATE state, AgoraWinRT.REMOTE_VIDEO_STATE_REASON reason, UInt32 elapsed);
		void OnFirstRemoteVideoFrame(UInt64 uid, UInt32 width, UInt32 height, UInt32 elapsed);
		void OnAudioSubscribeStateChanged(String channel, UInt64 uid, AgoraWinRT.STREAM_SUBSCRIBE_STATE oldState, AgoraWinRT.STREAM_SUBSCRIBE_STATE newState, UInt32 elapsed);
		void OnVideoSubscribeStateChanged(String channel, UInt64 uid, AgoraWinRT.STREAM_SUBSCRIBE_STATE oldState, AgoraWinRT.STREAM_SUBSCRIBE_STATE newState, UInt32 elapsed);
		//数据统计事件
		void OnRtcStats(AgoraWinRT.RtcStats stats);
		void OnNetworkQuality(UInt64 uid, AgoraWinRT.QUALITY_TYPE txQuality, AgoraWinRT.QUALITY_TYPE rxQuality);
		void OnLocalAudioStats(AgoraWinRT.LocalAudioStats stats);
		void OnLocalVideoStats(AgoraWinRT.LocalVideoStats stats);
		void OnRemoteAudioStats(AgoraWinRT.RemoteAudioStats stats);
		void OnRemoteVideoStats(AgoraWinRT.RemoteVideoStats stats);
		//音乐文件播放及混音
		void OnAudioMixingStateChanged(AgoraWinRT.AUDIO_MIXING_STATE_TYPE state, AgoraWinRT.AUDIO_MIXING_ERROR_TYPE error);
		void OnRemoteAudioMixingBegin();
		void OnRemoteAudioMixingEnd();
		//音效文件播放管理
		void OnAudioEffectFinished(UInt64 soundId);
		//CDN推流
		void OnRtmpStreamingStateChanged(String url, AgoraWinRT.RTMP_STREAM_PUBLISH_STATE state, AgoraWinRT.RTMP_STREAM_PUBLISH_ERROR error);
		void OnRtmpStreamingEvent(String url, AgoraWinRT.RTMP_STREAMING_EVENT code);
		void OnTranscodingUpdated();
		//跨频道媒体流转发
		void OnChannelMediaRelayStateChanged(AgoraWinRT.CHANNEL_MEDIA_RELAY_STATE state, AgoraWinRT.CHANNEL_MEDIA_RELAY_ERROR error);
		void OnChannelMediaRelayEvent(AgoraWinRT.CHANNEL_MEDIA_RELAY_EVENT code);
		//音量提示
		void OnAudioVolumeIndication(AgoraWinRT.AudioVolumeInfo[] speakers, UInt8 totalVolume);
		void OnActiveSpeaker(UInt64 uid);
		//视频流回退
		void OnLocalPublishFallbackToAudioOnly(Boolean isFallbackOrRecover);
		void OnRemoteSubscribeFallbackToAudioOnly(UInt64 uid, Boolean isFallbackOrRecover);
		//通话前网络测试
		void OnLastmileQuality(AgoraWinRT.QUALITY_TYPE quality);
		void OnLastmileProbeResult(AgoraWinRT.LastmileProbeResult result);
	};
	[default_interface]
	runtimeclass AgoraRtc : Windows.Foundation.IClosable
	{
		AgoraRtc(String vendorKey);

		//频道管理
		Int16 SetChannelProfile(AgoraWinRT.CHANNEL_PROFILE_TYPE type);
		Int16 SetClientRole(AgoraWinRT.CLIENT_ROLE_TYPE type);
		Int16 JoinChannel(String token, String channel, String info, UInt64 uid);
		Int16 SwitchChannel(String token, String channel);
		Int16 LeaveChannel();
		Int16 RenewToken(String token);
		AgoraWinRT.CONNECTION_STATE_TYPE GetConnectionState();

		//音频管理
		Int16 EnableAudio();
		Int16 DisableAudio();
		Int16 SetAudioProfile(AgoraWinRT.AUDIO_PROFILE_TYPE profile, AgoraWinRT.AUDIO_SCENARIO_TYPE scenario);
		Int16 AdjustRecordingSignalVolume(Int16 volume);
		Int16 AdjustUserPlaybackSignalVolume(UInt64 uid, Int16 volume);
		Int16 AdjustPlaybackSignalVolume(Int16 volume);
		Int16 EnableLocalAudio(Boolean enabled);
		Int16 MuteLocalAudioStream(Boolean muted);
		Int16 MuteRemoteAudioStream(UInt64 uid, Boolean muted);
		Int16 MuteAllRemoteAudioStreams(Boolean muted);
		Int16 SetDefaultMuteAllRemoteAudioStreams(Boolean muted);

		//视频管理
		Int16 EnableVideo();
		Int16 DisableVideo();
		Int16 SetVideoEncoderConfiguration(AgoraWinRT.VideoEncoderConfiguration config);
		Int16 MuteLocalVideoStream(Boolean muted);
		Int16 MuteRemoteVideoStream(UInt64 uid, Boolean muted);
		Int16 MuteAllRemoteVideoStream(Boolean muted);
		Int16 SetDefaultMuteAllRemoteVideoStreams(Boolean muted);

		//视频前处理及后处理
		Int16 SetBeautyEffectOptions(Boolean enabled, AgoraWinRT.BeautyOptions options);

		//音乐文件播放及混音
		Int16 StartAudioMixing(String file, Boolean loopback, Boolean replace, Int32 cycle);
		Int16 StopAudioMixing();
		Int16 PauseAudioMixing();
		Int16 ResumeAudioMixing();
		Int16 AdjustAudioMixingVolume(UInt16 volume);
		Int16 AdjustAudioMixingPlayoutVolume(UInt16 volume);
		Int16 AdjustAudioMixingPublishVolume(UInt16 volume);
		Int16 GetAudioMixingPublishVolume();
		Int16 GetAudioMixingDuration();
		Int16 GetAudioMixingCurrentPosition();
		Int16 SetAudioMixingPosition(UInt64 pos);
		Int16 SetAudioMixingPitch(Int16 pitch);

		//音效文件播放管理
		Int16 GetEffectsVolume();
		Int16 SetEffectsVolume(UInt16 volume);
		Int16 SetVolumeOfEffect(UInt64 soundId, UInt16 volume);
		Int16 PlayEffect(UInt64 soundId, String file, Int16 loopCount, Single pitch, Single pan, Single gain, Boolean publish);
		Int16 StopEffect(UInt64 soundId);
		Int16 StopAllEffect();
		Int16 PreloadEffect(UInt64 soundId, String file);
		Int16 UnloadEffect(UInt64 soundId);
		Int16 PauseEffect(UInt64 soundId);
		Int16 PauseAllEffect();
		Int16 ResumeEffect(UInt64 soundId);
		Int16 ResumeAllEffect();

		//变身与混响
		Int16 SetLocalVoiceChanger(AgoraWinRT.VOICE_CHANGER_PRESET changer);
		Int16 SetLocalVoiceReverbPreset(AgoraWinRT.AUDIO_REVERB_PRESET preset);
		Int16 SetLocalVoicePitch(Single pitch);
		Int16 SetLocalVoiceEqualization(AgoraWinRT.AUDIO_EQUALIZATION_BAND_FREQUENCY freq, Int16 gain);
		Int16 SetLocalVoiceReverb(AgoraWinRT.AUDIO_REVERB_TYPE type, UInt64 value);

		//听声辩位
		Int16 EnableSoundPositionIndication(Boolean enabled);
		Int16 SetRemoteVoicePosition(UInt64 uid, Single pan, Single gain);

		//CDN推流
		Int16 SetLiveTranscoding(AgoraWinRT.LiveTranscoding transcoding);
		Int16 AddPublishStreamUrl(String url, Boolean enabled);
		Int16 RemovePublishStreamUrl(String url);

		//跨频道媒体流转发
		Int16 StartChannelMediaRelay(AgoraWinRT.ChannelMediaRelayConfiguration config);
		Int16 UpdateChannelMediaRelay(AgoraWinRT.ChannelMediaRelayConfiguration config);
		Int16 StopChannelMediaRelay();

		//音量提示
		Int16 EnableAudioVolumeIndication(Int32 interval, UInt8 smooth, Boolean report);

		//视频双流模式
		Int16 EnableDualStreamMode(Boolean enabled);
		Int16 SetRemoteVideoStreamType(UInt64 uid, AgoraWinRT.REMOTE_VIDEO_STREAM_TYPE type);
		Int16 SetRemoteDefaultVideoStreamType(AgoraWinRT.REMOTE_VIDEO_STREAM_TYPE type);

		//视频流回退
		Int16 SetLocalPublishFallbackOption(AgoraWinRT.STREAM_FALLBACK_OPTIONS option);
		Int16 SetRemoteSubscribeFallbackOption(AgoraWinRT.STREAM_FALLBACK_OPTIONS option);
		Int16 SetRemoteUserPriority(UInt64 uid, AgoraWinRT.PRIORITY_TYPE type);

		//通话前网络测试
		Int16 StartEchoTest(UInt8 interval);
		Int16 StopEchoTest();
		Int16 EnableLastmileTest();
		Int16 DisableLastmileTest();
		Int16 StartLastmileProbeTest(AgoraWinRT.LastmileProbeConfig config);
		Int16 StopLastmileProbeTest();
	};
}
